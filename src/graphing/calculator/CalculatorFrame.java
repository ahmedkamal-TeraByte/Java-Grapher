/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package graphing.calculator;

import java.awt.KeyEventDispatcher;
import java.awt.event.ActionEvent;
import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;
import java.math.BigInteger;
import java.nio.ByteBuffer;
import javax.swing.ButtonModel;
import javax.swing.InputVerifier;
import javax.swing.JComponent;
import javax.swing.JOptionPane;
import javax.swing.SwingUtilities;

/**
 *
 * @author ahmed_kamal
 */
public class CalculatorFrame extends javax.swing.JFrame implements KeyListener{

    private final double DEFAULTDOUBLEVALUE=0.00000218932356264;
    /**
     * Creates new form CalculatorFrame
     */
    private double number1=DEFAULTDOUBLEVALUE,number2=DEFAULTDOUBLEVALUE;
    private double result;
    private CalculationOption calculationOption=CalculationOption.None;
    private boolean hasCleared=false;
    
    public CalculatorFrame() {
        initComponents();
        addRadioInGroup();
        outputField.addKeyListener(this);
        decimalRadio.setSelected(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        optionsGroup = new javax.swing.ButtonGroup();
        outputPanel = new javax.swing.JPanel();
        outputField = new javax.swing.JTextField();
        inputPanel = new javax.swing.JPanel();
        decimalPanel = new javax.swing.JPanel();
        dig1Button = new javax.swing.JButton();
        dig2Button = new javax.swing.JButton();
        dig3Button = new javax.swing.JButton();
        dig6Button = new javax.swing.JButton();
        dig5Button = new javax.swing.JButton();
        dig4Button = new javax.swing.JButton();
        dig7Button = new javax.swing.JButton();
        dig8Button = new javax.swing.JButton();
        dig9Button = new javax.swing.JButton();
        pointButton = new javax.swing.JButton();
        dig0Button = new javax.swing.JButton();
        clearButton = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        divideButton = new javax.swing.JButton();
        multiplyButton = new javax.swing.JButton();
        subtractButton = new javax.swing.JButton();
        percentageButton = new javax.swing.JButton();
        sqrtButton = new javax.swing.JButton();
        equalsButton = new javax.swing.JButton();
        addButton = new javax.swing.JButton();
        drawGraphButton = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        aButton = new javax.swing.JButton();
        bButton = new javax.swing.JButton();
        cButton = new javax.swing.JButton();
        eButton = new javax.swing.JButton();
        dButton = new javax.swing.JButton();
        fButton = new javax.swing.JButton();
        optionsPanel = new javax.swing.JPanel();
        binaryRadio = new javax.swing.JRadioButton();
        octalRadio = new javax.swing.JRadioButton();
        hexadecimalRadio = new javax.swing.JRadioButton();
        decimalRadio = new javax.swing.JRadioButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        outputPanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        outputField.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        outputField.setInheritsPopupMenu(true);
        outputField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                outputFieldKeyTyped(evt);
            }
        });

        javax.swing.GroupLayout outputPanelLayout = new javax.swing.GroupLayout(outputPanel);
        outputPanel.setLayout(outputPanelLayout);
        outputPanelLayout.setHorizontalGroup(
            outputPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(outputField, javax.swing.GroupLayout.Alignment.TRAILING)
        );
        outputPanelLayout.setVerticalGroup(
            outputPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(outputField)
        );

        inputPanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        dig1Button.setText("1");
        dig1Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dig1ButtonActionPerformed(evt);
            }
        });

        dig2Button.setText("2");
        dig2Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dig2ButtonActionPerformed(evt);
            }
        });

        dig3Button.setText("3");
        dig3Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dig3ButtonActionPerformed(evt);
            }
        });

        dig6Button.setText("6");
        dig6Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dig6ButtonActionPerformed(evt);
            }
        });

        dig5Button.setText("5");
        dig5Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dig5ButtonActionPerformed(evt);
            }
        });

        dig4Button.setText("4");
        dig4Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dig4ButtonActionPerformed(evt);
            }
        });

        dig7Button.setText("7");
        dig7Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dig7ButtonActionPerformed(evt);
            }
        });

        dig8Button.setText("8");
        dig8Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dig8ButtonActionPerformed(evt);
            }
        });

        dig9Button.setText("9");
        dig9Button.setToolTipText("");
        dig9Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dig9ButtonActionPerformed(evt);
            }
        });

        pointButton.setText(".");
        pointButton.setToolTipText("");
        pointButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pointButtonActionPerformed(evt);
            }
        });

        dig0Button.setText("0");
        dig0Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dig0ButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout decimalPanelLayout = new javax.swing.GroupLayout(decimalPanel);
        decimalPanel.setLayout(decimalPanelLayout);
        decimalPanelLayout.setHorizontalGroup(
            decimalPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(decimalPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(decimalPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(dig0Button, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(dig4Button, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(dig7Button, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(dig1Button))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(decimalPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(decimalPanelLayout.createSequentialGroup()
                        .addComponent(dig2Button)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(dig3Button))
                    .addGroup(decimalPanelLayout.createSequentialGroup()
                        .addComponent(dig5Button)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(dig6Button))
                    .addGroup(decimalPanelLayout.createSequentialGroup()
                        .addGroup(decimalPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(pointButton, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(dig8Button, javax.swing.GroupLayout.Alignment.LEADING))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(dig9Button)))
                .addContainerGap(32, Short.MAX_VALUE))
        );
        decimalPanelLayout.setVerticalGroup(
            decimalPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(decimalPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(decimalPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(dig1Button, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(dig2Button, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(dig3Button, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(decimalPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(dig4Button, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(dig5Button, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(dig6Button, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(decimalPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(dig7Button, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(dig8Button, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(dig9Button, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(7, 7, 7)
                .addGroup(decimalPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(dig0Button, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(pointButton, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        clearButton.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        clearButton.setText("C");
        clearButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearButtonActionPerformed(evt);
            }
        });

        divideButton.setText("/");
        divideButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                divideButtonActionPerformed(evt);
            }
        });

        multiplyButton.setText("*");
        multiplyButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                multiplyButtonActionPerformed(evt);
            }
        });

        subtractButton.setText("-");
        subtractButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                subtractButtonActionPerformed(evt);
            }
        });

        percentageButton.setText("%");

        sqrtButton.setText("sqrt");
        sqrtButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sqrtButtonActionPerformed(evt);
            }
        });

        equalsButton.setText("=");
        equalsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                equalsButtonActionPerformed(evt);
            }
        });

        addButton.setText("+");
        addButton.setToolTipText("");
        addButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addButtonActionPerformed(evt);
            }
        });

        drawGraphButton.setText("Draw Graph");
        drawGraphButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                drawGraphButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(percentageButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(divideButton, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(3, 3, 3)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(multiplyButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(subtractButton, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(sqrtButton, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(equalsButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(addButton)))
                    .addComponent(drawGraphButton, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(11, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(addButton, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(sqrtButton, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(equalsButton, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(multiplyButton, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(divideButton, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(subtractButton, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(percentageButton, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(18, 18, 18)
                .addComponent(drawGraphButton)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        aButton.setText("A");
        aButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                aButtonActionPerformed(evt);
            }
        });

        bButton.setText("B");
        bButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bButtonActionPerformed(evt);
            }
        });

        cButton.setText("C");
        cButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cButtonActionPerformed(evt);
            }
        });

        eButton.setText("E");
        eButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eButtonActionPerformed(evt);
            }
        });

        dButton.setText("D");
        dButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dButtonActionPerformed(evt);
            }
        });

        fButton.setText("F");
        fButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(aButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(bButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(dButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(eButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(fButton)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(aButton, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bButton, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cButton, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(eButton, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(dButton, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(fButton, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout inputPanelLayout = new javax.swing.GroupLayout(inputPanel);
        inputPanel.setLayout(inputPanelLayout);
        inputPanelLayout.setHorizontalGroup(
            inputPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(inputPanelLayout.createSequentialGroup()
                .addGroup(inputPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, inputPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(decimalPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(inputPanelLayout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addComponent(clearButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(19, Short.MAX_VALUE))
        );
        inputPanelLayout.setVerticalGroup(
            inputPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, inputPanelLayout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(inputPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(clearButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(inputPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(decimalPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(16, Short.MAX_VALUE))
        );

        optionsPanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        binaryRadio.setText("Binary");
        binaryRadio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                binaryRadioActionPerformed(evt);
            }
        });

        octalRadio.setText("Octal");
        octalRadio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                octalRadioActionPerformed(evt);
            }
        });

        hexadecimalRadio.setText("Hexadecimal");
        hexadecimalRadio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hexadecimalRadioActionPerformed(evt);
            }
        });

        decimalRadio.setText("Decimal");
        decimalRadio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                decimalRadioActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout optionsPanelLayout = new javax.swing.GroupLayout(optionsPanel);
        optionsPanel.setLayout(optionsPanelLayout);
        optionsPanelLayout.setHorizontalGroup(
            optionsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(optionsPanelLayout.createSequentialGroup()
                .addGap(54, 54, 54)
                .addComponent(decimalRadio)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(binaryRadio)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(octalRadio)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(hexadecimalRadio, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        optionsPanelLayout.setVerticalGroup(
            optionsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, optionsPanelLayout.createSequentialGroup()
                .addContainerGap(17, Short.MAX_VALUE)
                .addGroup(optionsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(binaryRadio)
                    .addComponent(hexadecimalRadio)
                    .addComponent(decimalRadio)
                    .addComponent(octalRadio))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(inputPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(outputPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(optionsPanel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(outputPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(optionsPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(inputPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void equalsButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_equalsButtonActionPerformed
        // TODO add your handling code here:
        if(calculationOption==CalculationOption.SquareRoot)
        {
            outputField.setText(getSquareRoot());
            calculationOption=CalculationOption.None;
            return;
        }
        if(number1!=DEFAULTDOUBLEVALUE && number2==DEFAULTDOUBLEVALUE && calculationOption!=CalculationOption.None)
            number2=getDoubleValue();
        performCalculation();
        
    }//GEN-LAST:event_equalsButtonActionPerformed

    private void subtractButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_subtractButtonActionPerformed
        // TODO add your handling code here:
        validateKey('-');
    }//GEN-LAST:event_subtractButtonActionPerformed

    private void multiplyButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_multiplyButtonActionPerformed
        // TODO add your handling code here:
        validateKey('*');
    }//GEN-LAST:event_multiplyButtonActionPerformed

    private void dig1ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dig1ButtonActionPerformed
        // TODO add your handling code here:
        validateKey('1');
    }//GEN-LAST:event_dig1ButtonActionPerformed

    private void dig2ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dig2ButtonActionPerformed
        // TODO add your handling code here:
        validateKey('2');
    }//GEN-LAST:event_dig2ButtonActionPerformed

    private void dig3ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dig3ButtonActionPerformed
        // TODO add your handling code here:
        validateKey('3');
    }//GEN-LAST:event_dig3ButtonActionPerformed

    private void dig4ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dig4ButtonActionPerformed
        // TODO add your handling code here:
        validateKey('4');
    }//GEN-LAST:event_dig4ButtonActionPerformed

    private void dig5ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dig5ButtonActionPerformed
        // TODO add your handling code here:
        validateKey('5');
    }//GEN-LAST:event_dig5ButtonActionPerformed

    private void dig6ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dig6ButtonActionPerformed
        // TODO add your handling code here:
        validateKey('6');
    }//GEN-LAST:event_dig6ButtonActionPerformed

    private void dig7ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dig7ButtonActionPerformed
        // TODO add your handling code here:
        validateKey('7');
    }//GEN-LAST:event_dig7ButtonActionPerformed

    private void dig8ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dig8ButtonActionPerformed
        // TODO add your handling code here:
        validateKey('8');
    }//GEN-LAST:event_dig8ButtonActionPerformed

    private void dig9ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dig9ButtonActionPerformed
        // TODO add your handling code here:
        validateKey('9');
    }//GEN-LAST:event_dig9ButtonActionPerformed

    private void dig0ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dig0ButtonActionPerformed
        // TODO add your handling code here:
        validateKey('0');
    }//GEN-LAST:event_dig0ButtonActionPerformed

    private void pointButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pointButtonActionPerformed
        // TODO add your handling code here:
        validateKey('.');
    }//GEN-LAST:event_pointButtonActionPerformed

    private void divideButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_divideButtonActionPerformed
        // TODO add your handling code here:
        validateKey('/');
    }//GEN-LAST:event_divideButtonActionPerformed

    private void addButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addButtonActionPerformed
        // TODO add your handling code here:
        validateKey('+');
    }//GEN-LAST:event_addButtonActionPerformed

    private void sqrtButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sqrtButtonActionPerformed
        // TODO add your handling code here:
        outputField.setText("sqrt()");
        calculationOption=CalculationOption.SquareRoot;
        outputField.setCaretPosition(5);
        outputField.requestFocus();
        hasCleared=false;
    }//GEN-LAST:event_sqrtButtonActionPerformed

    private void decimalRadioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_decimalRadioActionPerformed
        // TODO add your handling code here:
        clearAll();
       
    }//GEN-LAST:event_decimalRadioActionPerformed

    private void binaryRadioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_binaryRadioActionPerformed
      clearAll();
    }//GEN-LAST:event_binaryRadioActionPerformed

    private void outputFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_outputFieldKeyTyped
        validateKey(evt);
    }//GEN-LAST:event_outputFieldKeyTyped

    private void aButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_aButtonActionPerformed
        // TODO add your handling code here:
        validateKey('A');
    }//GEN-LAST:event_aButtonActionPerformed

    private void bButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bButtonActionPerformed
        // TODO add your handling code here:
        validateKey('B');
    }//GEN-LAST:event_bButtonActionPerformed

    private void cButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cButtonActionPerformed
        // TODO add your handling code here:
        validateKey('C');
    }//GEN-LAST:event_cButtonActionPerformed

    private void eButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eButtonActionPerformed
        // TODO add your handling code here:
        validateKey('E');
    }//GEN-LAST:event_eButtonActionPerformed

    private void dButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dButtonActionPerformed
        // TODO add your handling code here:
        validateKey('D');
    }//GEN-LAST:event_dButtonActionPerformed

    private void fButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fButtonActionPerformed
        // TODO add your handling code here:
        validateKey('F');
    }//GEN-LAST:event_fButtonActionPerformed

    private void clearButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearButtonActionPerformed
        // TODO add your handling code here:
        number1=number2=DEFAULTDOUBLEVALUE;
        calculationOption=CalculationOption.None;
        outputField.setText("");
    }//GEN-LAST:event_clearButtonActionPerformed

    private void octalRadioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_octalRadioActionPerformed
        // TODO add your handling code here:
        clearAll();
    }//GEN-LAST:event_octalRadioActionPerformed

    private void hexadecimalRadioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hexadecimalRadioActionPerformed
        // TODO add your handling code here:
        clearAll();
    }//GEN-LAST:event_hexadecimalRadioActionPerformed

    private void drawGraphButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_drawGraphButtonActionPerformed
        // TODO add your handling code here:
        GraphForm gf=new GraphForm();
        gf.setVisible(true);
//        this.setVisible(false);
        
    }//GEN-LAST:event_drawGraphButtonActionPerformed

    private void validateKey(KeyEvent evt)
    {
        char key=evt.getKeyChar();
        switch(key)
        {
            case '+':
                setValues(CalculationOption.Addition);
                hasCleared=false;
                evt.consume();
                return;
            case '-':
                setValues(CalculationOption.Subtraction);
                hasCleared=false;
                evt.consume();
                return;
            case '*':
                setValues(CalculationOption.Multiplication);
                hasCleared=false;
                evt.consume();
                return;
            case '/':
                setValues(CalculationOption.Division);
                hasCleared=false;
                evt.consume();
                return;
        }
        if(decimalRadio.isSelected())
            validateDecimalInput(evt);
        else if (binaryRadio.isSelected())
            validateBinaryInput(evt);
        else if (octalRadio.isSelected())
            validateOctalInput(evt);
        else if (hexadecimalRadio.isSelected())
            validateHexadecimalInput(evt);
    }
    
     private void validateKey(char key)
    {
        switch(key)
        {
            case '+':
                setValues(CalculationOption.Addition);
                hasCleared=false;
                return;
            case '-':
                setValues(CalculationOption.Subtraction);
                hasCleared=false;
                return;
            case '*':
                setValues(CalculationOption.Multiplication);
                hasCleared=false;
                return;
            case '/':
                setValues(CalculationOption.Division);
                hasCleared=false;
                return;
        }
        if(decimalRadio.isSelected())
        {
            if(isValidDecimal(key))
            {
                if(calculationOption!=CalculationOption.None && !hasCleared && calculationOption!=CalculationOption.SquareRoot)
                {
                    outputField.setText("");
                    hasCleared=true;
                }
                writeInField(Character.toString(key));
            }
        }
        else if (binaryRadio.isSelected())
        {
            if(isValidBinary(key))
            {
                if(calculationOption!=CalculationOption.None && !hasCleared && calculationOption!=CalculationOption.SquareRoot)
                {
                    outputField.setText("");
                    hasCleared=true;
                }
                writeInField(Character.toString(key));
                
            }
        }
        else if (octalRadio.isSelected())
        {
            if(isValidOctal(key))
            {
                if(calculationOption!=CalculationOption.None && !hasCleared && calculationOption!=CalculationOption.SquareRoot)
                {
                    outputField.setText("");
                    hasCleared=true;
                }
                writeInField(Character.toString(key));
            }
        }
        else if (hexadecimalRadio.isSelected())
        {
            if(isValidHexaDecimal(key))
            {
                if(calculationOption!=CalculationOption.None && !hasCleared && calculationOption!=CalculationOption.SquareRoot)
                {
                    outputField.setText("");
                    hasCleared=true;
                }
                writeInField(Character.toString(key));
            }
        }
    }
    
    private void validateDecimalInput(KeyEvent evt)
    {
        char key = evt.getKeyChar();
        if(isValidDecimal(key))
        {
            if(calculationOption!=CalculationOption.None && !hasCleared && calculationOption!=CalculationOption.SquareRoot)
            {
                outputField.setText("");
                hasCleared=true;
            }
        }
        else
            evt.consume();
    }
    private boolean isValidDecimal(char key)
    {
       if(key=='1' ||key=='2' ||key=='3' ||key=='4' ||key=='5' ||key=='6' ||key=='7' ||key=='8' ||key=='9' ||key=='0' ||key=='.')
        return true;
       else return false;
    }
    private void validateBinaryInput(KeyEvent evt)
    {
        char key = evt.getKeyChar();
        if(isValidBinary(key))
        {
            if(calculationOption!=CalculationOption.None && !hasCleared && calculationOption!=CalculationOption.SquareRoot)
            {
                outputField.setText("");
                hasCleared=true;
            }
        }
        else 
            evt.consume();
    }
    private boolean isValidBinary(char key)
    {
        return (key=='1' || key=='0');
    }
    private void validateHexadecimalInput(KeyEvent evt)
    {
        char key = evt.getKeyChar();
        if(isValidHexaDecimal(key))
        {
            if(calculationOption!=CalculationOption.None && !hasCleared && calculationOption!=CalculationOption.SquareRoot)
            {
                outputField.setText("");
                hasCleared=true;
            }
        }
        else if(key=='a'|| key =='b' || key=='c' || key =='d' || key=='e' || key=='f')
        {
            evt.setKeyChar(Character.toUpperCase(key));
        }
        else 
            evt.consume();
    }
    private boolean isValidHexaDecimal(char key)
    {
        if(key=='1' ||key=='2' ||key=='3' ||key=='4' ||key=='5' ||key=='6' ||key=='7' ||key=='8' ||key=='9' ||key=='0' ||key=='A'||key=='B'||key=='C'||key=='D'||key=='E'||key=='F')
        {
            return true;
        }
        else if(key=='a'|| key =='b' || key=='c' || key =='d' || key=='e' || key=='f')
            return true;
        return false;
    }
    private void validateOctalInput(KeyEvent evt)
    {
        char key = evt.getKeyChar();
        if(isValidOctal(key))
        {
            if(calculationOption!=CalculationOption.None && !hasCleared && calculationOption!=CalculationOption.SquareRoot)
            {
                outputField.setText("");
                hasCleared=true;
            }
        }
        else 
            evt.consume();
    }
    private boolean isValidOctal(char key)
    {
        if(key=='1' ||key=='2' ||key=='3' ||key=='4' ||key=='5' ||key=='6' ||key=='7'|| key=='0' )
            return true;
        return false;
    }
    private void writeInField(String input)
    {
        final int caretPosition = outputField.getCaretPosition();
        String currentText = outputField.getText();
        String newText = currentText.substring(0, caretPosition) + 
        input + currentText.substring(caretPosition, currentText.length());

        outputField.setText(newText);
        outputField.requestFocus();

        SwingUtilities.invokeLater(new Runnable() {
            @Override
            public void run() {
                outputField.setCaretPosition(caretPosition+1);
            }
        });
    }
    private void addRadioInGroup()
    {
        optionsGroup.add(decimalRadio);
        optionsGroup.add(octalRadio);
        optionsGroup.add(hexadecimalRadio);
        optionsGroup.add(binaryRadio);
        
    }
    
    private void setValues(CalculationOption option)
    {
        if(!outputField.getText().equals(""))
        {
            if(this.number1==DEFAULTDOUBLEVALUE && this.number2==DEFAULTDOUBLEVALUE)
            {
                number1=getDoubleValue();
                calculationOption=option;
                outputField.setText("");
            }
            else if (this.number1!=DEFAULTDOUBLEVALUE && this.number2==DEFAULTDOUBLEVALUE)
            {
                number2=getDoubleValue();
                number1=performCalculation(number1,number2,calculationOption);
                outputField.setText(getResult(number1));
                calculationOption=option;
                number2=DEFAULTDOUBLEVALUE;
            }
        }
    }
    private double getDoubleValue()
    {
        // gets input from textfield and converts into double depending on number system
        String input=outputField.getText();
        if(decimalRadio.isSelected())
            return Double.parseDouble(input);
        else if (binaryRadio.isSelected())
            return convertBinary(input);
        else if (octalRadio.isSelected())
            return convertOctal(input);
        else if (hexadecimalRadio.isSelected())
            return convertHexadecimal(input);
        return 0;
    }
    private void performCalculation()
    {
        double result=performCalculation(number1,number2,calculationOption);
        outputField.setText(getResult(result));
        number1=number2=DEFAULTDOUBLEVALUE;
        calculationOption= CalculationOption.None;
    }
    private double performCalculation(double num1,double num2, CalculationOption option)
    {
        switch(option)
        {
            case Addition:
                return num1+num2;
            case Subtraction:
                return num1-num2;
            case Multiplication:
                return num1*num2;
            case Division:
                try
                {
                    return num1/num2;
                }
                catch(ArithmeticException e)
                {
                    outputField.setText("INFINITY");
                    number2=DEFAULTDOUBLEVALUE;
                    number1=DEFAULTDOUBLEVALUE;
                }
                    
                
        }
        return 0;
    }
    private void clearAll()
    {
        outputField.setText("");
        number1=number2=DEFAULTDOUBLEVALUE;
        calculationOption=CalculationOption.None;
    }
//    /**
//     * @param args the command line arguments
//     */
//    public static void main(String args[]) {
//        /* Set the Nimbus look and feel */
//        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
//        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
//         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
//         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Windows".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(CalculatorFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(CalculatorFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(CalculatorFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(CalculatorFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
//        //</editor-fold>
//
//        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new CalculatorFrame().setVisible(true);
//            }
//        });
//         
//    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton aButton;
    private javax.swing.JButton addButton;
    private javax.swing.JButton bButton;
    private javax.swing.JRadioButton binaryRadio;
    private javax.swing.JButton cButton;
    private javax.swing.JButton clearButton;
    private javax.swing.JButton dButton;
    private javax.swing.JPanel decimalPanel;
    private javax.swing.JRadioButton decimalRadio;
    private javax.swing.JButton dig0Button;
    private javax.swing.JButton dig1Button;
    private javax.swing.JButton dig2Button;
    private javax.swing.JButton dig3Button;
    private javax.swing.JButton dig4Button;
    private javax.swing.JButton dig5Button;
    private javax.swing.JButton dig6Button;
    private javax.swing.JButton dig7Button;
    private javax.swing.JButton dig8Button;
    private javax.swing.JButton dig9Button;
    private javax.swing.JButton divideButton;
    private javax.swing.JButton drawGraphButton;
    private javax.swing.JButton eButton;
    private javax.swing.JButton equalsButton;
    private javax.swing.JButton fButton;
    private javax.swing.JRadioButton hexadecimalRadio;
    private javax.swing.JPanel inputPanel;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JButton multiplyButton;
    private javax.swing.JRadioButton octalRadio;
    private javax.swing.ButtonGroup optionsGroup;
    private javax.swing.JPanel optionsPanel;
    private javax.swing.JTextField outputField;
    private javax.swing.JPanel outputPanel;
    private javax.swing.JButton percentageButton;
    private javax.swing.JButton pointButton;
    private javax.swing.JButton sqrtButton;
    private javax.swing.JButton subtractButton;
    // End of variables declaration//GEN-END:variables

    @Override
    public void keyTyped(KeyEvent arg0) {
        System.out.println("typed"+arg0.getKeyChar());
    }

    @Override
    public void keyPressed(KeyEvent arg0) {
        System.out.println("Pressed");
    }

    @Override
    public void keyReleased(KeyEvent arg0) {
        System.out.println("Released");
    }

    private double convertBinary(String input) {
        
        return Integer.parseInt(input, 2);
    }

    private double convertOctal(String input) {
        return Integer.parseInt(input, 8);
    }

    private double convertHexadecimal(String input) {
        return Integer.parseInt(input,16);
    }
    private String convertToBinary(double input)
    {
        return Integer.toBinaryString((int) input);
    }
    private String convertToOctal(double input)
    {
        return Integer.toOctalString((int) input);
    }
    private String convertToHexadecimal(double input)
    {
        return Integer.toHexString((int)input).toUpperCase();
    }

    private String getResult(double result) {
        if(decimalRadio.isSelected())
            return Double.toString(result);
        else if (binaryRadio.isSelected())
            return convertToBinary(result);
        else if(octalRadio.isSelected())
            return convertToOctal(result);
        else if(hexadecimalRadio.isSelected())
            return convertToHexadecimal(result);
        else 
            return "";
    }

    private String getSquareRoot() {
        String str= outputField.getText();
        String substring=str.substring(5,str.length()-1);
        if(decimalRadio.isSelected())
            return Double.toString(Math.sqrt(Double.valueOf(substring)));
        else if(binaryRadio.isSelected())
            return convertToBinary(Math.sqrt(convertBinary(substring)));
        else if (octalRadio.isSelected())
            return convertToOctal(Math.sqrt(convertOctal(substring)));
        else if(hexadecimalRadio.isSelected())
            return convertToHexadecimal(Math.sqrt(convertHexadecimal(substring)));
        else
            return null;
    }
    

}
